import React, { useState } from 'react';
import { ordersService, searchService, type CreateOrderRequest } from '../../../services';
import { useApiCall } from '../../../hooks/useApiCall';
import { ApiResult } from '../../../components/ApiResult';
import { UuidSearch } from '../../../components/UuidSearch';

export const OrdersTester: React.FC = () => {
  const [orderId, setOrderId] = useState('');
  const [createData, setCreateData] = useState<CreateOrderRequest>({
    masterId: '',
    designId: '',
    appointmentTime: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().slice(0, 16),
    price: 2000
  });

  const [proposedTime, setProposedTime] = useState(
    new Date(Date.now() + 48 * 60 * 60 * 1000).toISOString().slice(0, 16)
  );

  const [searchParams, setSearchParams] = useState({
    page: 1,
    limit: 10,
    status: '',
    role: 'client' as 'client' | 'master'
  });

  const apiCall = useApiCall();

  const handleCreateOrder = async () => {
    if (!createData.masterId.trim() || !createData.designId.trim()) {
      await apiCall.execute(
        () => Promise.reject(new Error('–í–≤–µ–¥–∏—Ç–µ ID –º–∞—Å—Ç–µ—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω–∞')),
        ''
      );
      return;
    }

    await apiCall.execute(
      () => ordersService.createOrder({
        ...createData,
        appointmentTime: new Date(createData.appointmentTime).toISOString()
      }),
      '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω'
    );
  };

  const handleGetUserOrders = async () => {
    await apiCall.execute(
      () => ordersService.getUserOrders(searchParams),
      '–ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã'
    );
  };

  const handleGetOrderById = async () => {
    if (!orderId.trim()) {
      await apiCall.execute(
        () => Promise.reject(new Error('–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞')),
        ''
      );
      return;
    }

    await apiCall.execute(
      () => ordersService.getOrderById(orderId),
      '–ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω'
    );
  };

  const handleConfirmOrder = async () => {
    if (!orderId.trim()) {
      await apiCall.execute(
        () => Promise.reject(new Error('–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞')),
        ''
      );
      return;
    }

    await apiCall.execute(
      () => ordersService.confirmOrder(orderId),
      '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'
    );
  };

  const handleProposeTime = async () => {
    if (!orderId.trim()) {
      await apiCall.execute(
        () => Promise.reject(new Error('–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞')),
        ''
      );
      return;
    }

    await apiCall.execute(
      () => ordersService.proposeAlternativeTime(
        orderId,
        new Date(proposedTime).toISOString()
      ),
      '–í—Ä–µ–º—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ'
    );
  };

  const handleDeclineOrder = async () => {
    if (!orderId.trim()) {
      await apiCall.execute(
        () => Promise.reject(new Error('–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞')),
        ''
      );
      return;
    }

    await apiCall.execute(
      () => ordersService.declineOrder(orderId, '–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è'),
      '–ó–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω'
    );
  };

  const handleAcceptProposedTime = async () => {
    if (!orderId.trim()) {
      await apiCall.execute(
        () => Promise.reject(new Error('–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞')),
        ''
      );
      return;
    }

    await apiCall.execute(
      () => ordersService.acceptProposedTime(orderId),
      '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–Ω—è—Ç–æ'
    );
  };

  const handleGetActiveOrders = async () => {
    await apiCall.execute(
      () => ordersService.getActiveOrdersForMaster(),
      '–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –º–∞—Å—Ç–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã'
    );
  };

  const handleGetOrderHistory = async () => {
    await apiCall.execute(
      () => ordersService.getOrderHistoryForClient(),
      '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞'
    );
  };

  const handleGetOrdersStats = async () => {
    await apiCall.execute(
      () => ordersService.getOrdersStats(),
      '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—É—á–µ–Ω–∞'
    );
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
  const handleSearchDesigns = async (query: string) => {
    try {
      return await searchService.searchDesigns({ query });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–∏–∑–∞–π–Ω–æ–≤:', error);
      return [];
    }
  };

  const handleSearchMasters = async (query: string) => {
    try {
      return await searchService.searchMasters({ query });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤:', error);
      return [];
    }
  };

  const handleSearchOrders = async (query: string) => {
    try {
      return await searchService.searchOrders({ query });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤:', error);
      return [];
    }
  };

  return (
    <div className="tester-section">
      <h2>üìÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤</h2>

      {/* –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ */}
      <div className="form-section">
        <h3>–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>
        
        <UuidSearch
          label="–ú–∞—Å—Ç–µ—Ä"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –∞–¥—Ä–µ—Å –º–∞—Å—Ç–µ—Ä–∞"
          value={createData.masterId}
          onChange={(value) => setCreateData({ ...createData, masterId: value })}
          onSearch={handleSearchMasters}
          required
        />
        
        <UuidSearch
          label="–î–∏–∑–∞–π–Ω"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∏–∑–∞–π–Ω–∞"
          value={createData.designId}
          onChange={(value) => setCreateData({ ...createData, designId: value })}
          onSearch={handleSearchDesigns}
          required
        />
        
        <div className="form-group">
          <label>–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏:</label>
          <input
            type="datetime-local"
            value={createData.appointmentTime}
            onChange={(e) => setCreateData({ ...createData, appointmentTime: e.target.value })}
          />
        </div>
        <div className="form-group">
          <label>–¶–µ–Ω–∞:</label>
          <input
            type="number"
            value={createData.price}
            onChange={(e) => setCreateData({ ...createData, price: parseInt(e.target.value) || 0 })}
          />
        </div>
        <button onClick={handleCreateOrder} disabled={apiCall.loading}>
          {apiCall.loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑'}
        </button>
      </div>

      {/* –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤ */}
      <div className="form-section">
        <h3>–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤</h3>
        <div className="form-group">
          <label>–°—Ç—Ä–∞–Ω–∏—Ü–∞:</label>
          <input
            type="number"
            value={searchParams.page}
            onChange={(e) => setSearchParams({ ...searchParams, page: parseInt(e.target.value) || 1 })}
          />
        </div>
        <div className="form-group">
          <label>–õ–∏–º–∏—Ç:</label>
          <input
            type="number"
            value={searchParams.limit}
            onChange={(e) => setSearchParams({ ...searchParams, limit: parseInt(e.target.value) || 10 })}
          />
        </div>
        <div className="form-group">
          <label>–°—Ç–∞—Ç—É—Å:</label>
          <select
            value={searchParams.status}
            onChange={(e) => setSearchParams({ ...searchParams, status: e.target.value })}
          >
            <option value="">–í—Å–µ</option>
            <option value="pending">–û–∂–∏–¥–∞–µ—Ç</option>
            <option value="confirmed">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</option>
            <option value="declined">–û—Ç–∫–ª–æ–Ω–µ–Ω</option>
            <option value="time_proposed">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—Ä–µ–º—è</option>
            <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω</option>
            <option value="cancelled">–û—Ç–º–µ–Ω–µ–Ω</option>
          </select>
        </div>
        <div className="form-group">
          <label>–†–æ–ª—å:</label>
          <select
            value={searchParams.role}
            onChange={(e) => setSearchParams({ ...searchParams, role: e.target.value as 'client' | 'master' })}
          >
            <option value="client">–ö–ª–∏–µ–Ω—Ç</option>
            <option value="master">–ú–∞—Å—Ç–µ—Ä</option>
          </select>
        </div>
        <button onClick={handleGetUserOrders} disabled={apiCall.loading}>
          –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã
        </button>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–æ–º */}
      <div className="form-section">
        <h3>–î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–æ–º</h3>
        
        <UuidSearch
          label="–ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞"
          placeholder="–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞"
          value={orderId}
          onChange={setOrderId}
          onSearch={handleSearchOrders}
        />
        
        <div className="actions-row">
          <button onClick={handleGetOrderById} disabled={apiCall.loading}>
            –ü–æ–ª—É—á–∏—Ç—å –ø–æ ID
          </button>
          <button onClick={handleConfirmOrder} disabled={apiCall.loading}>
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
          </button>
          <button onClick={handleDeclineOrder} disabled={apiCall.loading}>
            –û—Ç–∫–ª–æ–Ω–∏—Ç—å
          </button>
        </div>
        
        <div className="form-group">
          <label>–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—Ä–µ–º—è:</label>
          <input
            type="datetime-local"
            value={proposedTime}
            onChange={(e) => setProposedTime(e.target.value)}
          />
          <button onClick={handleProposeTime} disabled={apiCall.loading}>
            –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—Ä–µ–º—è
          </button>
        </div>
        <button onClick={handleAcceptProposedTime} disabled={apiCall.loading}>
          –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        </button>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="form-section">
        <h3>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
        <div className="actions-row">
          <button onClick={handleGetActiveOrders} disabled={apiCall.loading}>
            –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –º–∞—Å—Ç–µ—Ä–∞
          </button>
          <button onClick={handleGetOrderHistory} disabled={apiCall.loading}>
            –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
          </button>
          <button onClick={handleGetOrdersStats} disabled={apiCall.loading}>
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤
          </button>
        </div>
      </div>

      <ApiResult 
        loading={apiCall.loading} 
        error={apiCall.error} 
        success={apiCall.success} 
        data={apiCall.data}
        onClear={apiCall.clearState}
      />
    </div>
  );
}; 
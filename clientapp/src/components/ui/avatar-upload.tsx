import { useState, useRef, ChangeEvent, useEffect } from "react";
import { Camera, Upload, Loader2 } from "lucide-react";
import { toast } from "sonner";
import { userService } from "@/services/userService";
import { useAuth } from "@/contexts/AuthContext";
import { getImageUrl } from "@/utils/image.util";
import styles from "./avatar-upload.module.css";

interface AvatarUploadProps {
  currentAvatar?: string;
  userName?: string;
  onAvatarUpdate?: (newAvatarUrl: string) => void;
  size?: "sm" | "md" | "lg";
  showUploadButton?: boolean;
  className?: string;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–æ–≤
 */
const AvatarUpload = ({ 
  currentAvatar, 
  userName, 
  onAvatarUpdate,
  size = "md",
  showUploadButton = true,
  className = ""
}: AvatarUploadProps) => {
  const { user: currentUser, updateUser } = useAuth();
  const [isUploading, setIsUploading] = useState(false);
  const [previewUrl, setPreviewUrl] = useState<string | null>(null);
  const [uploadedAvatarUrl, setUploadedAvatarUrl] = useState<string | null>(null);
  const fileInputRef = useRef<HTMLInputElement>(null);

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∞–≤–∞—Ç–∞—Ä–æ–º
  useEffect(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ currentAvatar –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è
    // –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, –Ω–æ –Ω–µ –ø—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    if (currentAvatar && currentAvatar !== uploadedAvatarUrl) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—à–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      if (!uploadedAvatarUrl || currentAvatar !== uploadedAvatarUrl) {
        setUploadedAvatarUrl(currentAvatar);
      }
    }
  }, [currentAvatar]);

  // –ü–æ–ª—É—á–∞–µ–º CSS –∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞
  const getAvatarSizeClass = () => {
    switch (size) {
      case "sm": return styles.avatarSm;
      case "md": return styles.avatarMd;
      case "lg": return styles.avatarLg;
      default: return styles.avatarMd;
    }
  };

  const getIconSizeClass = () => {
    switch (size) {
      case "sm": return styles.iconSm;
      case "md": return styles.iconMd;
      case "lg": return styles.iconLg;
      default: return styles.iconMd;
    }
  };

  const getButtonSizeClass = () => {
    switch (size) {
      case "sm": return styles.buttonSm;
      case "md": return styles.buttonMd;
      case "lg": return styles.buttonLg;
      default: return styles.buttonMd;
    }
  };

  const handleFileSelect = (e: React.MouseEvent) => {
    e.stopPropagation();
    e.preventDefault();
    fileInputRef.current?.click();
  };

  const handleFileChange = async (event: ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5 –ú–ë –º–∞–∫—Å–∏–º—É–º)
    const maxSizeInMB = 5;
    const maxSizeInBytes = maxSizeInMB * 1024 * 1024; // 5 * 1024 * 1024 = 5242880 bytes
    
    if (file.size > maxSizeInBytes) {
      const fileSizeInMB = (file.size / 1024 / 1024).toFixed(2);
      
      toast.error("üö´ –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π", {
        description: `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${maxSizeInMB} –ú–ë.\n–†–∞–∑–º–µ—Ä –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞: ${fileSizeInMB} –ú–ë.\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.`,
        duration: 6000,
      });
      
      console.warn(`‚ùå –§–∞–π–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω: ${file.name} (${fileSizeInMB} –ú–ë > ${maxSizeInMB} –ú–ë)`);
      
      // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞
      if (fileInputRef.current) {
        fileInputRef.current.value = '';
      }
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    const allowedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];
    if (!allowedTypes.includes(file.type)) {
      toast.error("üö´ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞", {
        description: `–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:\n‚Ä¢ JPEG (.jpg, .jpeg)\n‚Ä¢ PNG (.png)\n‚Ä¢ WebP (.webp)\n‚Ä¢ GIF (.gif)\n\n–í–∞—à —Ñ–∞–π–ª: ${file.type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø'}`,
        duration: 6000,
      });
      
      console.warn(`‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: ${file.name} (${file.type})`);
      
      // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞
      if (fileInputRef.current) {
        fileInputRef.current.value = '';
      }
      return;
    }

    try {
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é
      const fileUrl = URL.createObjectURL(file);
      setPreviewUrl(fileUrl);

      setIsUploading(true);

      console.log(`üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª: ${file.name}, —Ä–∞–∑–º–µ—Ä: ${(file.size / 1024 / 1024).toFixed(2)} –ú–ë, —Ç–∏–ø: ${file.type}`);

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
      const result = await userService.updateAvatar(file);
      
      console.log('üéâ –ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', result.avatar_url);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π URL –ª–æ–∫–∞–ª—å–Ω–æ
      setUploadedAvatarUrl(result.avatar_url);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (currentUser && updateUser) {
        updateUser({
          ...currentUser,
          avatar: result.avatar_url
        });
        console.log('üë§ –û–±–Ω–æ–≤–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
      }

      // –í—ã–∑—ã–≤–∞–µ–º callback –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
      onAvatarUpdate?.(result.avatar_url);

      toast.success("‚úÖ –£—Å–ø–µ—Ö", {
        description: "–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω",
        duration: 3000,
      });

      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–≤—å—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
      setTimeout(() => {
        setPreviewUrl(null);
        URL.revokeObjectURL(fileUrl);
        console.log('üîÑ –û—á–∏—Å—Ç–∏–ª–∏ –ø—Ä–µ–≤—å—é, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
      }, 1000);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞:', error);
      
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–≤—å—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
      if (previewUrl) {
        URL.revokeObjectURL(previewUrl);
        setPreviewUrl(null);
      }

      toast.error("‚ùå –û—à–∏–±–∫–∞", {
        description: error instanceof Error ? error.message : "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä",
        duration: 5000,
      });
    } finally {
      setIsUploading(false);
      // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
      if (fileInputRef.current) {
        fileInputRef.current.value = '';
      }
    }
  };

  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: –ø—Ä–µ–≤—å—é > –ª–æ–∫–∞–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π > –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–ø
  const avatarUrl = uploadedAvatarUrl || currentAvatar;
  const displayAvatar = previewUrl || getImageUrl(avatarUrl);
  const displayName = userName || currentUser?.email || '?';

  console.log('üñºÔ∏è AvatarUpload render:', {
    previewUrl: !!previewUrl,
    uploadedAvatarUrl,
    currentAvatar,
    avatarUrl,
    displayAvatar,
    isUploading,
    priority: previewUrl ? 'preview' : uploadedAvatarUrl ? 'uploaded' : 'current'
  });

  return (
    <div className={`${styles.container} ${className}`}>
      {/* –ê–≤–∞—Ç–∞—Ä */}
      <div className={styles.avatarGroup}>
        <div className={`${styles.avatar} ${getAvatarSizeClass()} ${isUploading ? styles.uploading : ''}`}>
          {displayAvatar ? (
            <img 
              src={displayAvatar} 
              alt={displayName}
              className={styles.avatarImage}
            />
          ) : (
            <div className={styles.avatarFallback}>
              {displayName[0]?.toUpperCase()}
            </div>
          )}
        </div>

        {/* Overlay —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {isUploading && (
          <div className={`${styles.loadingOverlay} ${getAvatarSizeClass()}`}>
            <Loader2 className={`${getIconSizeClass()} ${styles.loading}`} />
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –∫–∞–º–µ—Ä—ã (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ hover –Ω–∞ –±–æ–ª—å—à–∏—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö) */}
        {showUploadButton && size !== "sm" && (
          <button
            onClick={handleFileSelect}
            disabled={isUploading}
            className={`${styles.hoverOverlay} ${getAvatarSizeClass()}`}
          >
            <Camera className={getIconSizeClass()} />
          </button>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (–æ—Ç–¥–µ–ª—å–Ω–∞—è –¥–ª—è –º–∞–ª—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–ª–∏ –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º–∞—è) */}
      

      {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ */}
      <input
        ref={fileInputRef}
        type="file"
        accept="image/jpeg,image/png,image/webp,image/gif"
        onChange={handleFileChange}
        className={styles.hiddenInput}
      />
    </div>
  );
};

export default AvatarUpload; 
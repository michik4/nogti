import dotenv from "dotenv";

dotenv.config();

import express from "express";
import path from "path";
import CONFIG from "./conf/global.conf";
import mainRoutes from "./routes/main.route";
import { getLogger, requestBodyLogger } from "./middleware/logger.middleware";
import { notFoundHandler, errorHandler, errorLogger, validateRequestBody } from "./middleware/error.middleware";
import { corsMiddleware } from "./middleware/cors.middleware";
import { initializeDatabase, closeDatabase } from "./conf/orm.conf";
import { ConsoleUtil as Console } from "./utils/console.util";

const app = express();

// CORS middleware
app.use(corsMiddleware);

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–æ–∫
app.use('/uploads', express.static(path.join(__dirname, '../public/uploads')));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º —Ñ–∞–π–ª–∞–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
app.use('/uploads', (req, res, next) => {
  console.log(`üìÅ –ó–∞–ø—Ä–æ—Å –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º—É —Ñ–∞–π–ª—É: ${req.path}`);
  next();
});

// middlewares
app.use(getLogger()); // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ª–æ–≥–≥–µ—Ä–∞ –ø–æ –æ–∫—Ä—É–∂–µ–Ω–∏—é
app.use(requestBodyLogger); // –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(express.json());
app.use(validateRequestBody); // –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤

// routes
app.use("/api", mainRoutes);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤)
app.use(notFoundHandler); // –æ–±—Ä–∞–±–æ—Ç–∫–∞ 404 –æ—à–∏–±–æ–∫
app.use(errorLogger); // –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
app.use(errorHandler); // –æ–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

// start server
app.listen(CONFIG.SERVER.PORT, async (error?: Error) => {
    if (error) {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.message}`);
        process.exit(1);
    }

    Console.showSeparator();
    Console.showInfo('LOAD CONFIG');
    Console.showInfo(JSON.stringify(CONFIG, null, 2), false);
    Console.showInfo('END LOAD CONFIG');
    Console.showSeparator();

    await initializeDatabase();

    Console.showSuccess(`Server is running on ${CONFIG.SERVER.URL}...`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
    Console.showWarning('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    closeDatabase();
    process.exit(0);
});

process.on('SIGINT', () => {
    Console.showWarning('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    closeDatabase();
    process.exit(0);
});
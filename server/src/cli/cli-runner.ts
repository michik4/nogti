#!/usr/bin/env node


import * as fs from 'fs';
import * as path from 'path';
import { spawn } from 'child_process';
import { ConsoleUtil } from '../utils/console.util';
import { RatingCli } from './rating.cli';

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è CLI –æ–±–µ—Ä—Ç–∫–∞
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç –º–µ–∂–¥—É ts-node –∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
 */
class CLIRunner {
    private cliName: string;
    private args: string[];

    constructor() {
        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è CLI –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        this.cliName = process.argv[2]; // env, db, etc.
        this.args = process.argv.slice(3);
    }

    /**
     * –ó–∞–ø—É—Å–∫ CLI
     */
    async run(): Promise<void> {
        if (!this.cliName || this.cliName === 'help') {
            CLIRunner.showHelp();
            return;
        }

        if (this.cliName === 'version' || this.cliName === '--version' || this.cliName === '-v') {
            CLIRunner.showVersion();
            return;
        }

        if (this.cliName === 'list') {
            CLIRunner.showAvailableCLIs();
            return;
        }

        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã rating
        if (this.cliName === 'rating') {
            await this.handleRatingCommand();
            return;
        }

        const cliPath = await this.getCLIPath();
        if (!cliPath) {
            ConsoleUtil.showError(`CLI "${this.cliName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            console.log('');
            CLIRunner.showAvailableCLIs();
            process.exit(1);
        }

        await this.executeCLI(cliPath);
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
     */
    private async handleRatingCommand(): Promise<void> {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –¥–ª—è –∫–æ–º–∞–Ω–¥ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
        await import('../conf/orm.conf').then(async (module) => {
            await module.AppDataSource.initialize();
        });

        const subCommand = this.args[0];
        const commandArgs = this.args.slice(1);

        try {
            switch (subCommand) {
                case 'recalculate':
                case 'recalc':
                    await RatingCli.recalculateAllRatings();
                    break;
                case 'stats':
                    if (commandArgs.length === 0) {
                        await RatingCli.showOverallStats();
                    } else {
                        const masterId = commandArgs[0];
                        await RatingCli.showMasterRatingStats(masterId);
                    }
                    break;
                case 'review':
                    if (commandArgs.length === 0) {
                        console.log('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ID –æ—Ç–∑—ã–≤–∞');
                        console.log('–ü—Ä–∏–º–µ—Ä: npm run cli rating review <review-id>');
                    } else {
                        const reviewId = commandArgs[0];
                        await RatingCli.showReviewDetails(reviewId);
                    }
                    break;
                case 'diagnose':
                    if (commandArgs.length === 0) {
                        console.log('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                        console.log('–ü—Ä–∏–º–µ—Ä: npm run cli rating diagnose <user-id> [review-id]');
                    } else {
                        const userId = commandArgs[0];
                        const reviewId = commandArgs[1]; // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
                        await RatingCli.diagnos–µOwnership(userId, reviewId);
                    }
                    break;
                case 'help':
                case '--help':
                case '-h':
                default:
                    this.showRatingHelp();
                    break;
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Ä–µ–π—Ç–∏–Ω–≥–æ–≤:', error);
            process.exit(1);
        }
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
     */
    private showRatingHelp(): void {
        console.log(`
üåü –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏:

üìä –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
  rating stats                    - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ —Å–∏—Å—Ç–µ–º—ã
  rating stats <master-id>        - –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –º–∞—Å—Ç–µ—Ä–∞
  rating recalculate             - –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
  rating review <review-id>       - –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
  rating diagnose <user-id> [review-id] - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ–º –æ—Ç–∑—ã–≤–æ–≤

üí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  npm run cli rating stats                           # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  npm run cli rating stats 123e4567-e89b-12d3-a456  # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Å—Ç–µ—Ä–∞
  npm run cli rating recalc                          # –ü–µ—Ä–µ—Å—á–µ—Ç –≤—Å–µ—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
  npm run cli rating review 987fcdeb-51a2-43f6-b789 # –î–µ—Ç–∞–ª–∏ –æ—Ç–∑—ã–≤–∞
  npm run cli rating diagnose 123e4567-e89b-12d3     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä—Å—Ç–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  npm run cli rating diagnose user-id review-id      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞

üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:
  –ö–æ–º–∞–Ω–¥–∞ diagnose –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã—è–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Ç–∑—ã–≤–∞–º.
  –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤.

üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
  - –†–µ–π—Ç–∏–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏/–∏–∑–º–µ–Ω–µ–Ω–∏–∏/—É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞
  - –ö–æ–º–∞–Ω–¥–∞ recalculate –ø–æ–ª–µ–∑–Ω–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
  - –ú–∏–Ω–∏–º—É–º 3 –æ—Ç–∑—ã–≤–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ —Ç–æ–ø-—Ä–µ–π—Ç–∏–Ω–≥
  - –ö–ª–∏–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –æ—Ç–∑—ã–≤—ã
  - –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö 403 –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É diagnose –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω
        `);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ CLI —Ñ–∞–π–ª—É
     */
    private async getCLIPath(): Promise<string | null> {
        const tsPath = path.join(__dirname, `${this.cliName}.cli.ts`);
        const jsPath = path.join(__dirname, `${this.cliName}.cli.js`);
        const distPath = path.join(process.cwd(), 'dist', 'cli', `${this.cliName}.cli.js`);

        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –≤ dist
        if (fs.existsSync(distPath)) {
            return distPath;
        }

        // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º JS –≤–µ—Ä—Å–∏—é –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        if (fs.existsSync(jsPath)) {
            return jsPath;
        }

        // –í –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—á–µ—Ä–µ–¥—å TS –≤–µ—Ä—Å–∏—é (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        if (fs.existsSync(tsPath)) {
            return tsPath;
        }

        return null;
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ CLI
     */
    private async executeCLI(cliPath: string): Promise<void> {
        const isTypeScript = cliPath.endsWith('.ts');
        
        let command: string;
        let commandArgs: string[];

        if (isTypeScript) {
            // –î–ª—è TS —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º ts-node
            command = 'npx';
            commandArgs = ['ts-node', '--transpile-only', cliPath, ...this.args];
        } else {
            // –î–ª—è JS —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º node
            command = 'node';
            commandArgs = [cliPath, ...this.args];
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        const childProcess = spawn(command, commandArgs, {
            stdio: 'inherit',
            shell: process.platform === 'win32'
        });

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        childProcess.on('exit', (code) => {
            process.exit(code || 0);
        });

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        childProcess.on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ CLI:', error.message);
            process.exit(1);
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å–ø—Ä–∞–≤–∫—É
     */
    static showHelp(): void {
        console.log(`
üõ†Ô∏è  Prometai Server CLI Tools

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npm run cli <command> [options]

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
  env                       –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è (.env)
  db                        –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
  test                      –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞–º–∏
  rating                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:
  npm run cli env help      –°–ø—Ä–∞–≤–∫–∞ –ø–æ env CLI
  npm run cli env list      –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  npm run cli env get PORT  –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  npm run cli env set PORT 3000  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
  
  npm run cli db help       –°–ø—Ä–∞–≤–∫–∞ –ø–æ database CLI
  npm run cli db migration:status  –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
  npm run cli db migration:run     –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
  
  npm run cli test help     –°–ø—Ä–∞–≤–∫–∞ –ø–æ test CLI
  npm run cli test run      –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
  npm run cli test coverage –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞
  npm run cli rating help  –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º
  npm run cli rating recalc  –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –≤—Å–µ —Ä–µ–π—Ç–∏–Ω–≥–∏
  npm run cli rating stats  –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
  npm run cli rating stats <master-id>  –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Å—Ç–µ—Ä–∞
  npm run cli rating review <review-id>  –î–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞

–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–±–µ–∑ npm wrapper):
  npm run -s env:get PORT   –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (—á–∏—Å—Ç—ã–π –≤—ã–≤–æ–¥)
  npm run -s env:list       –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  npm run -s env:validate   –ü—Ä–æ–≤–µ—Ä–∏—Ç—å .env —Ñ–∞–π–ª

–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É CLI:
  npm run cli <command> help

–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:
  npm run cli env create            # –°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª
  npm run cli env backup            # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env
  npm run cli db migration:generate CreateUsers  # –°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é
  npm run cli rating recalc        # –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –≤—Å–µ —Ä–µ–π—Ç–∏–Ω–≥–∏
        `);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é CLI
     */
    static showVersion(): void {
        try {
            const packagePath = path.join(process.cwd(), 'package.json');
            const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
            
            console.log(`üõ†Ô∏è  Prometai Server CLI Tools v${packageJson.version}`);
            console.log(`üì¶ Package: ${packageJson.name}`);
            console.log(`üìù Description: ${packageJson.description}`);
            console.log(`üîß Node.js: ${process.version}`);
            console.log(`üíª Platform: ${process.platform} ${process.arch}`);
        } catch (error) {
            console.log('üõ†Ô∏è  Prometai Server CLI Tools');
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ CLI
     */
    static showAvailableCLIs(): void {
        console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:');
        console.log('  env  - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
        console.log('  db   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö');
        console.log('  test - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞–º–∏');
        console.log('  rating - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏');
        console.log('');
        console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npm run cli <cli-name> [args]');
        console.log('–ü—Ä–∏–º–µ—Ä: npm run cli env get PORT');
    }
}

// –ó–∞–ø—É—Å–∫
const runner = new CLIRunner();
runner.run().catch(console.error); 
